<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="chart1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCACYAIcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDx
        fdTkOTTsUYxXkdD1uUKcnJoTk1JHHvakCYRx72p3lMnTvxS+QVRvvA44xXOeNvivo/gCwaTUtQS3aEbi
        OrN7UFHSOAkfzMwKfMcelZuu+N9N8MxebdXUapjJG5d35V8q/FP9sbVtZv5v7Dna20/aT5jfeftj6d/w
        rxTWfidqXiSZjeXVxeSIfn3D7oPfP+etaxpu+pnKolsfdsX7TPhdZWV9Qt44xzlslq0Lb9oTwpqJU2+q
        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
</value>
  </data>
</root>